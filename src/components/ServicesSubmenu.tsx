"use client";

import { useState, useRef, useEffect } from "react";
import Link from "next/link";

interface SubmenuItem {
  title: string;
  href: string;
  icon?: string;
  description?: string;
}

interface ServicesSubmenuProps {
  onSelect?: () => void;
}

export default function ServicesSubmenu({ onSelect }: ServicesSubmenuProps) {
  const [isOpen, setIsOpen] = useState<boolean>(false);
  const [isMobile, setIsMobile] = useState<boolean>(false);
  const timeoutRef = useRef<NodeJS.Timeout | null>(null);
  const menuRef = useRef<HTMLDivElement>(null);

  const submenuItems: SubmenuItem[] = [
    { 
      title: "‡¶ü‡ßç‡¶∞‡ßá‡¶° ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶á‡¶∏‡ßç‡¶Ø‡ßÅ ‡¶ì ‡¶®‡¶¨‡¶æ‡ßü‡¶®", 
      href: "/services/trade-license", 
      icon: "üìã",
      description: "‡¶¨‡¶æ‡¶£‡¶ø‡¶ú‡ßç‡¶Ø‡¶ø‡¶ï ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ" 
    },
    { 
      title: "‡¶π‡ßã‡¶≤‡ßç‡¶°‡¶ø‡¶Ç ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶ì ‡¶ü‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏", 
      href: "/services/holding-tax", 
      icon: "üè†",
      description: "‡¶π‡ßã‡¶≤‡ßç‡¶°‡¶ø‡¶Ç ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡¶ø‡¶§ ‡¶∏‡ßá‡¶¨‡¶æ" 
    },
    { 
      title: "‡¶ú‡¶®‡ßç‡¶Æ ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶®", 
      href: "/services/birth-registration", 
      icon: "üë∂",
      description: "‡¶ú‡¶®‡ßç‡¶Æ ‡¶®‡¶ø‡¶¨‡¶®‡ßç‡¶ß‡¶® ‡¶∏‡¶®‡¶¶" 
    },
    { 
      title: "‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ‡¶∞ ‡¶¨‡ßà‡¶¶‡ßç‡¶Ø‡ßÅ‡¶§‡¶ø‡¶ï ‡¶¨‡¶æ‡¶§‡¶ø", 
      href: "/services/street-lights", 
      icon: "üí°",
      description: "‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ‡¶∞ ‡¶Ü‡¶≤‡ßã ‡¶∏‡¶Ç‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§" 
    },
    { 
      title: "‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ ‡¶®‡¶∞‡ßç‡¶¶‡¶Æ‡¶æ ‡¶´‡ßÅ‡¶ü‡¶™‡¶æ‡¶§", 
      href: "/services/roads-drains", 
      icon: "üõ£Ô∏è",
      description: "‡¶Ö‡¶¨‡¶ï‡¶æ‡¶†‡¶æ‡¶Æ‡ßã ‡¶∞‡¶ï‡ßç‡¶∑‡¶£‡¶æ‡¶¨‡ßá‡¶ï‡ßç‡¶∑‡¶£" 
    },
    { 
      title: "‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ", 
      href: "/services/market", 
      icon: "üõí",
      description: "‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ" 
    },
    { 
      title: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶ï‡¶Æ‡¶™‡ßç‡¶≤‡ßá‡¶ï‡ßç‡¶∏", 
      href: "/services/health-complex", 
      icon: "üè•",
      description: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞" 
    },
    { 
      title: "‡¶ï‡¶¨‡¶∞‡¶∏‡ßç‡¶•‡¶æ‡¶®/‡¶∂‡ßç‡¶Æ‡¶∂‡¶æ‡¶®‡¶ò‡¶æ‡¶ü", 
      href: "/services/cemetery", 
      icon: "‚ö∞Ô∏è",
      description: "‡¶∂‡ßá‡¶∑‡¶ï‡ßÉ‡¶§‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ" 
    },
    { 
      title: "‡¶¨‡ßç‡¶Ø‡¶æ‡ßü‡¶æ‡¶Æ‡¶æ‡¶ó‡¶æ‡¶∞", 
      href: "/services/gymnasium", 
      icon: "üí™",
      description: "‡¶∂‡¶∞‡ßÄ‡¶∞ ‡¶ö‡¶∞‡ßç‡¶ö‡¶æ ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞" 
    },
    { 
      title: "‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø ‡¶∏‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞", 
      href: "/services/community-center", 
      icon: "üèõÔ∏è",
      description: "‡¶∏‡¶æ‡¶Æ‡¶æ‡¶ú‡¶ø‡¶ï ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶® ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞" 
    },
    { 
      title: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∑‡ßç‡¶†‡¶æ‡¶®", 
      href: "/services/educational-institutions", 
      icon: "üéì",
      description: "‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤, ‡¶ï‡¶≤‡ßá‡¶ú ‡¶ì ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ" 
    },
    { 
      title: "‡¶™‡¶æ‡¶†‡¶æ‡¶ó‡¶æ‡¶∞", 
      href: "/services/library", 
      icon: "üìö",
      description: "‡¶ó‡ßç‡¶∞‡¶®‡ßç‡¶•‡¶æ‡¶ó‡¶æ‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ" 
    },
    { 
      title: "‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ‡¶§ ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤", 
      href: "/services/music-school", 
      icon: "üéµ",
      description: "‡¶∏‡¶æ‡¶Ç‡¶∏‡ßç‡¶ï‡ßÉ‡¶§‡¶ø‡¶ï ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ" 
    },
    { 
      title: "‡¶¨‡¶æ‡¶∏ ‡¶ü‡¶æ‡¶∞‡ßç‡¶Æ‡¶ø‡¶®‡¶æ‡¶≤", 
      href: "/services/bus-terminal", 
      icon: "üöå",
      description: "‡¶™‡¶∞‡¶ø‡¶¨‡¶π‡¶® ‡¶∏‡ßá‡¶¨‡¶æ" 
    },
    { 
      title: "‡¶ó‡¶£‡¶∂‡ßå‡¶ö‡¶æ‡¶ó‡¶æ‡¶∞", 
      href: "/services/public-toilet", 
      icon: "üöª",
      description: "‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡¶ø ‡¶∂‡ßå‡¶ö‡¶æ‡¶ó‡¶æ‡¶∞" 
    },
    { 
      title: "‡¶™‡¶æ‡¶∞‡ßç‡¶ï ‡¶ì ‡¶â‡¶¶‡ßç‡¶Ø‡¶æ‡¶®", 
      href: "/services/parks-gardens", 
      icon: "üå≥",
      description: "‡¶¨‡¶ø‡¶®‡ßã‡¶¶‡¶® ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞" 
    },
    { 
      title: "‡¶ñ‡ßá‡¶≤‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶†", 
      href: "/services/playground", 
      icon: "‚öΩ",
      description: "‡¶ï‡ßç‡¶∞‡ßÄ‡¶°‡¶º‡¶æ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ" 
    },
  ];

  // üîπ Detect mobile screen
  useEffect(() => {
    const checkMobile = () => {
      setIsMobile(window.innerWidth < 768);
    };

    checkMobile();
    window.addEventListener("resize", checkMobile);
    
    return () => window.removeEventListener("resize", checkMobile);
  }, []);

  // üîπ Close menu when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {
        setIsOpen(false);
      }
    };

    if (isOpen) {
      document.addEventListener("mousedown", handleClickOutside);
    }

    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, [isOpen]);

  const handleMouseEnter = () => {
    if (timeoutRef.current) clearTimeout(timeoutRef.current);
    if (!isMobile) {
      setIsOpen(true);
    }
  };

  const handleMouseLeave = () => {
    if (!isMobile) {
      timeoutRef.current = setTimeout(() => {
        setIsOpen(false);
      }, 250);
    }
  };

  const handleToggle = () => {
    if (isMobile) {
      setIsOpen(!isOpen);
    }
  };

  const handleItemClick = () => {
    setIsOpen(false);
    onSelect?.();
  };

  // üîπ Responsive column calculation
  const getColumns = () => {
    if (isMobile) {
      return [submenuItems];
    }
    
    const columnSize = Math.ceil(submenuItems.length / 3);
    return [
      submenuItems.slice(0, columnSize),
      submenuItems.slice(columnSize, columnSize * 2),
      submenuItems.slice(columnSize * 2),
    ];
  };

  const columns = getColumns();

  return (
    <div
      ref={menuRef}
      className="relative select-none"
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      {/* üîπ Main Button */}
      <button
        type="button"
        className="relative group w-full md:w-auto px-4 py-3 md:py-2 text-white font-normal shadow-md hover:shadow-lg
                   transition-all duration-500 ease-in-out cursor-pointer border-b md:border-b-0 border-white/20 md:border-none"
        aria-expanded={isOpen}
        aria-haspopup="true"
        onClick={handleToggle}
      >
        {/* Hover Gradient Background */}
        {!isMobile && (
          <span
            className="absolute inset-0 bg-gradient-to-r from-orange-600 to-red-600 
                       opacity-0 group-hover:opacity-100 transition-opacity duration-500 rounded"
          ></span>
        )}

        {/* Button Text */}
        <span className="flex items-center justify-between md:justify-start relative z-10">
          <span className="flex items-center">
            <span className="mr-2">üõéÔ∏è</span>
            ‡¶∏‡ßá‡¶¨‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π
          </span>

          {/* Mobile Dropdown Arrow */}
          {isMobile && (
            <svg
              className={`w-4 h-4 ml-2 transition-transform duration-300 ${isOpen ? "rotate-180" : ""}`}
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
            </svg>
          )}
        </span>

        {/* Bottom Border Animation */}
        {!isMobile && (
          <span
            className="absolute bottom-0 left-0 w-0 h-[3px] bg-red-400 
                       group-hover:w-full transition-all duration-500"
          ></span>
        )}
      </button>

      {/* üîπ Dropdown Menu - Updated for right alignment */}
      {isOpen && (
        <div
          className="absolute md:absolute top-full left-0 md:left-0 mt-0 md:mt-2 
                     w-full md:w-[900px] bg-white rounded-none md:rounded-lg shadow-xl border border-gray-200 
                     z-50 max-h-[80vh] md:max-h-none overflow-y-auto md:overflow-visible"
          onMouseEnter={handleMouseEnter}
          onMouseLeave={handleMouseLeave}
        >
          <div className="p-4">
            <h3 className="text-base md:text-lg font-bold text-gray-800 mb-4 border-b pb-2">
              ‡¶®‡¶æ‡¶ó‡¶∞‡¶ø‡¶ï ‡¶∏‡ßá‡¶¨‡¶æ‡¶∏‡¶Æ‡ßÇ‡¶π
            </h3>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              {columns.map((column, columnIndex) => (
                <div key={columnIndex} className="space-y-2">
                  {column.map((item) => (
                    <Link
                      key={item.title}
                      href={item.href}
                      onClick={handleItemClick}
                      className="flex items-start p-3 rounded-lg hover:bg-orange-50 transition-colors duration-200 group border border-transparent hover:border-orange-200"
                    >
                      <span className="text-lg md:text-xl mr-3 flex-shrink-0">{item.icon}</span>
                      <div className="flex-1 min-w-0">
                        <p className="font-medium text-gray-800 group-hover:text-orange-700 text-sm md:text-base leading-tight">
                          {item.title}
                        </p>
                        <p className="text-xs text-gray-600 mt-1">{item.description}</p>
                      </div>
                    </Link>
                  ))}
                </div>
              ))}
            </div>

            {/* üîπ Service Status Section */}
            <div className="mt-4 p-3 bg-orange-50 border border-orange-200 rounded-lg">
              <div className="flex items-center justify-between mb-2">
                <p className="text-xs md:text-sm text-orange-800 font-medium">üîÑ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶∏‡ßá‡¶¨‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏</p>
                <span className="text-orange-600 font-bold text-sm md:text-base">‡¶∏‡¶ï‡ßç‡¶∞‡¶ø‡¶Ø‡¶º</span>
              </div>
              <div className="w-full bg-orange-200 rounded-full h-1.5 md:h-2">
                <div
                  className="bg-orange-600 h-1.5 md:h-2 rounded-full transition-all duration-300"
                  style={{ width: "90%" }}
                ></div>
              </div>
              <p className="text-xs text-orange-600 mt-1">‡ß®‡ß™/‡ß≠ ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶∏‡ßá‡¶¨‡¶æ ‡¶â‡¶™‡¶≤‡¶¨‡ßç‡¶ß</p>
            </div>

            {/* üîπ Mobile Close Button */}
            {isMobile && (
              <div className="mt-4 pt-3 border-t border-gray-200">
                <button
                  onClick={() => setIsOpen(false)}
                  className="w-full py-2 text-center text-red-600 font-medium hover:bg-red-50 rounded transition-colors duration-200 text-sm"
                >
                  ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
                </button>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  );
}