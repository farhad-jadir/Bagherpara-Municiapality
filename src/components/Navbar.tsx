// components/Navbar.tsx
"use client";

import { useState } from "react";
import Link from "next/link";
import { useRouter } from "next/navigation";
import AboutSubmenu from "./AboutSubmenu";
import OfficersSubmenu from "./OfficersSubmenu";
import ServicesSubmenu from "./ServicesSubmenu";
import LawsSubmenu from "./LawsSubmenu"; // ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶Æ‡ßç‡¶™‡ßã‡¶®‡ßá‡¶®‡ßç‡¶ü ‡¶á‡¶Æ‡ßç‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®

interface MenuItem {
  title: string;
  href: string;
}

export default function Navbar() {
  const [active, setActive] = useState<string>("");
  const [query, setQuery] = useState<string>("");
  const [category, setCategory] = useState<string>("‡¶Ö‡¶´‡¶ø‡¶∏‡ßá‡¶∞ ‡¶ñ‡¶¨‡¶∞");
  const router = useRouter();

  const menuItems: MenuItem[] = [
    { title: "‡¶´‡¶∞‡¶Æ", href: "/forms" },
    { title: "‡¶ó‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßÄ", href: "/gallery" },
    { title: "‡¶ú‡¶∞‡ßÅ‡¶∞‡ßÄ ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó", href: "/contact" },
    { title: "FAQ", href: "/faq" },
    { title: "‡¶™‡¶∞‡¶ø‡¶ï‡¶≤‡ßç‡¶™‡¶®‡¶æ", href: "/plans" },
  ];

  const handleSearch = (): void => {
    if (query.trim()) {
      router.push(`/search?query=${query}&type=${category}`);
      setQuery("");
    }
  };

  return (
    <nav className="w-full shadow border-b">
      {/* üîπ Top Header */}
      <div className="flex justify-between items-center bg-purple-800 text-white px-4 py-2 text-sm">
        <span className="font-medium animate-pulse">
          ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶ú‡¶æ‡¶§‡ßÄ‡¶Ø‡¶º ‡¶§‡¶•‡ßç‡¶Ø ‡¶¨‡¶æ‡¶§‡¶æ‡¶Ø‡¶º‡¶®
        </span>
        <div className="flex items-center gap-2">
          {/* ‚úÖ ‡¶°‡¶æ‡¶á‡¶®‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶ó‡¶∞‡¶ø */}
          <select
            value={category}
            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setCategory(e.target.value)}
            className="text-black px-2 py-1 rounded border focus:outline-none"
          >
            <option value="‡¶Ö‡¶´‡¶ø‡¶∏‡ßá‡¶∞ ‡¶ñ‡¶¨‡¶∞">‡¶Ö‡¶´‡¶ø‡¶∏‡ßá‡¶∞ ‡¶ñ‡¶¨‡¶∞</option>
            <option value="‡¶®‡ßã‡¶ü‡¶ø‡¶∂">‡¶®‡ßã‡¶ü‡¶ø‡¶∂</option>
          </select>

          {/* ‚úÖ ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö */}
          <input
            type="text"
            placeholder="Search"
            value={query}
            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setQuery(e.target.value)}
            className="px-2 py-1 rounded text-black border focus:outline-none focus:ring-2 focus:ring-green-400"
          />
          <button
            onClick={handleSearch}
            className="bg-green-600 px-3 py-1 rounded text-white hover:bg-green-700 transition-all duration-300"
          >
            Search
          </button>

          {/* ‚úÖ ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶¨‡¶æ‡¶ü‡¶® */}
          <button className="ml-2 border px-2 py-1 rounded bg-gray-100 text-black hover:bg-gray-200 transition-all duration-300">
            English
          </button>
        </div>
      </div>

      {/* üîπ Logo + Title - ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶á‡¶Æ‡ßá‡¶ú ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶≤‡ßã‡¶ó‡ßã */}
      <div className="flex items-center justify-center py-10 bg-white relative min-h-[500px]">
        <div className="absolute inset-0 opacity-30 ">
          <img 
            src="/logo.png" 
            alt="Background Logo" 
            className="w-full h-full object-cover"
          />
        </div>
        
        {/* ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤ */}
        <Link href="/" onClick={() => setActive("/")} className="relative z-10 w-full flex justify-center">
          <div className="flex items-center cursor-pointer group p-6 bg-opacity-90 rounded-lg shadow-lg">
            <h1 className="text-4xl font-bold text-purple-800 group-hover:text-red-600 transition-colors duration-300">
              ‡¶¨‡¶æ‡¶ò‡¶æ‡¶∞‡¶™‡¶æ‡ßú‡¶æ ‡¶™‡ßá‡ßó‡¶∞‡¶∏‡¶≠‡¶æ
            </h1>
          </div>
        </Link>
      </div>

      {/* üîπ Main Menu */}
      <div className="bg-white border-t">
        <ul className="flex justify-center space-x-6 text-lg py-3">
          {/* ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï‡ßá ‡¶∏‡¶æ‡¶¨‡¶Æ‡ßá‡¶®‡ßÅ */}
          <li>
            <AboutSubmenu />
          </li>
          
          {/* ‡¶ï‡¶∞‡ßç‡¶Æ‡¶ï‡¶∞‡ßç‡¶§‡¶æ‡¶¨‡ßÉ‡¶®‡ßç‡¶¶ ‡¶∏‡¶æ‡¶¨‡¶Æ‡ßá‡¶®‡ßÅ */}
          <li>
            <OfficersSubmenu />
          </li>
          
          {/* ‡¶∏‡ßá‡¶¨‡¶æ ‡¶∏‡¶Æ‡ßÇ‡¶π ‡¶∏‡¶æ‡¶¨‡¶Æ‡ßá‡¶®‡ßÅ */}
          <li>
            <ServicesSubmenu />
          </li>
          
          {/* ‡¶Ü‡¶á‡¶® ‡¶ì ‡¶®‡ßÄ‡¶§‡¶ø‡¶Æ‡¶æ‡¶≤‡¶æ ‡¶∏‡¶æ‡¶¨‡¶Æ‡ßá‡¶®‡ßÅ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶® */}
          <li>
            <LawsSubmenu />
          </li>
          
          {/* ‡¶¨‡¶æ‡¶ï‡¶ø ‡¶Æ‡ßá‡¶®‡ßÅ ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶ó‡ßÅ‡¶≤‡¶ø */}
          {menuItems.map((item: MenuItem) => (
            <li key={item.title}>
              <Link
                href={item.href}
                className={`px-3 py-2 transition-all duration-300 ${
                  active === item.href
                    ? "border-b-2 border-red-600 text-red-600"
                    : "hover:border-b-2 hover:border-red-600 hover:text-red-600"
                }`}
                onClick={() => setActive(item.href)}
              >
                {item.title}
              </Link>
            </li>
          ))}
        </ul>
      </div>
    </nav>
  );
}